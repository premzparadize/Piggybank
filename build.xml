<?xml version="1.0"?>
<project name="piggybank" basedir="." default="all" xmlns:ivy="antlib:org.apache.ivy.ant">
    
    <property name="package.name" value="wilburbank" />
    <property name="java.dir" value="src/main/java" />
    <property name="lib.dir" value="lib" />
    <property name="version" value="0.01" />
    
    <!-- IVY properteis set here -->
    <property name="ivy.repo.dir" value="${user.home}/ivyrepo" />
    <property name="ivy.dir" location="ivy" />
    <loadproperties srcfile="${ivy.dir}/libraries.properties"/>
    <property name="mvnrepo" value="http://repo2.maven.org/maven2"/>
    <property name="ivy.jar" location="${ivy.dir}/ivy-${ivy.version}.jar"/>
    <property name="ivy_repo_url" value="${mvnrepo}/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar"/>
    <property name="ivysettings.xml" location="${ivy.dir}/ivysettings.xml" />
    <property name="ivy.org" value="org.apache.pig"/>
    <property name="build.dir" location="build" />
    <property name="dist.dir" value="${build.dir}"/>
    <property name="dist.jar" value="${dist.dir}/jar" />
    <property name="dist.class" value="${dist.dir}/classes" />
    <property name="build.ivy.dir" location="${build.dir}/ivy" />
    <property name="build.ivy.lib.dir" location="${build.ivy.dir}/lib" />
    <property name="ivy.lib.dir" location="${build.ivy.lib.dir}/${ant.project.name}"/>
    <property name="build.ivy.report.dir" location="${build.ivy.dir}/report" />
    <property name="build.ivy.maven.dir" location="${build.ivy.dir}/maven" />
    <property name="ivy.artifact.retrieve.pattern" value="${ant.project.name}/[artifact]-[revision].[ext]"/>
    
    <path id="main-classpath">
        <fileset dir="${lib.dir}" >
            <include name="*.jar" />
        </fileset>
        <fileset dir="${ivy.lib.dir}" >
            <include name="*.jar" />
        </fileset>
        <pathelement path="${classes.dir}" />
    </path>
    
    <target name="all" depends="clean, build, jar" />
    
    <target name="clean" description="Clean all created files" >
        <echo message="cleaning all jobs."/>
        <delete dir="${build.dir}" />
        <delete dir="${dist.jar}" />
    </target>
    
    <target name="build" depends="ivy-compile" description="build class files">
        <mkdir dir="${dist.class}" />
        <javac fork="true" target="1.6" destdir="${dist.class}" debug="true" deprecation="true" failonerror="true" >
            <src path="${java.dir}" />
            <classpath refid="main-classpath" />
        </javac>
    </target>
    
    <target name="jar" depends="build" description="Build jars" >
        <mkdir dir="${dist.jar}" />
        <jar destfile="${dist.jar}/${package.name}.jar" >
            <fileset dir="${dist.class}" >
                <include name="**/*.*" />
            </fileset>
        </jar>
    </target>


    <target name="ivy-init-dirs">
       <mkdir dir="${build.ivy.dir}" />
       <mkdir dir="${build.ivy.lib.dir}" />
       <mkdir dir="${build.ivy.report.dir}" />
       <mkdir dir="${build.ivy.maven.dir}" />
    </target>

    <target name="ivy-probe-antlib" >
       <condition property="ivy.found">
            <typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
       </condition>
    </target>

    <target name="ivy-download" description="To download ivy" unless="offline">
       <get src="${ivy_repo_url}" dest="${ivy.jar}" usetimestamp="true"/>
    </target>


    <!-- Ivy build stuff mostly copy-pasted from Pig -->

    <!--
    To avoid Ivy leaking things across big projects, always load Ivy in the same classloader.
    Also note how we skip loading Ivy if it is already there, just to make sure all is well.
    -->
    <target name="ivy-init-antlib" depends="ivy-download,ivy-init-dirs,ivy-probe-antlib" unless="ivy.found">
      <typedef uri="antlib:org.apache.ivy.ant" onerror="fail" loaderRef="ivyLoader">
        <classpath>
           <pathelement location="${ivy.jar}"/>
        </classpath>
      </typedef>
      <fail>
        <condition >
          <not>
            <typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
          </not>
        </condition>
        You need Apache Ivy 2.0 or later from http://ant.apache.org/
        It could not be loaded from ${ivy_repo_url}
      </fail>
    </target>

    <target name="ivy-init" depends="ivy-init-antlib" >
    <!--Configure Ivy by reading in the settings file
       If anyone has already read in a settings file into this settings ID, it gets priority
    -->
      <ivy:configure settingsid="${ant.project.name}.ivy.settings" file="${ivysettings.xml}" override='false'/>
    </target>

    <target name="ivy-compile" depends="ivy-init" description="Resolve, Retrieve Ivy-managed artifacts for compile configuration">
      <ivy:resolve settingsRef="${ant.project.name}.ivy.settings" conf="compile"/>
      <ivy:retrieve settingsRef="${ant.project.name}.ivy.settings"
                pattern="${build.ivy.lib.dir}/${ivy.artifact.retrieve.pattern}" conf="compile"/>
      <ivy:cachepath pathid="compile.classpath" conf="compile"/>         
    </target>

</project>
